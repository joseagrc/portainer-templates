services:
  db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: ${DATABASE_IMAGE}:${DATABASE_TAG}
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    labels:
      # Habilita Traefik para TCP (no HTTP)
      - "traefik.enable=true"
      # Regla de enrutamiento TCP (HostSNI para distinguir instancias)
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-mysql.rule=HostSNI(`mysql.${GITEA_URL}`) || HostSNI(`www.mysql.${GITEA_URL}`)"  # Ej: mysql-instancia1.tudominio.com
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-mysql.entrypoints=mysql"  # Entrypoint TCP definido en Traefik
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-mysql.tls=true"  # Opcional: TLS para seguridad
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-mysql.tls.certresolver=letsencrypt"
      # Backend (puerto de MySQL)
      - "traefik.tcp.services.${COMPOSE_PROJECT_NAME}-mysql.loadbalancer.server.port=3306"

  gitea:
    container_name: ${COMPOSE_PROJECT_NAME}-app
    image: ${GITEA_IMAGE}:${GITEA_TAG}
    restart: always
    depends_on:
      - db
    ports:
      - "${GITEA_SSH_PORT}:22"
    volumes:
      - data:/var/lib/gitea
      - config:/etc/gitea
      - custom:/data/gitea/custom
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      GITEA__database__DB_TYPE: ${GITEA__DATABASE__DB_TYPE}
      GITEA__database__HOST: ${COMPOSE_PROJECT_NAME}-db:3306
      GITEA__database__USER: ${DATABASE_USERNAME}
      GITEA__database__PASSWD: ${DATABASE_PASSWORD}
      GITEA__database__NAME: ${DATABASE_NAME}
      APP_NAME: ${APP_NAME}
      RUN_MODE: ${RUN_MODE}
      RUN_USER: ${RUN_USER}
      GITEA__server__DOMAIN: ${GITEA_URL}
      GITEA__server__SSH_PORT: ${GITEA_SSH_PORT}
      GITEA__server__SSH_LISTEN_PORT: ${GITEA_SSH_PORT}
      GITEA__server__ROOT_URL: https://${GITEA_URL}
      GITEA__service__DISABLE_REGISTRATION: ${DISABLE_REGISTRATION}
      GITEA__service__REQUIRE_SIGNIN_VIEW:  ${REQUIRE_SIGNIN_VIEW}
      GITEA__service__REGISTER_EMAIL_CONFIRM: ${REGISTER_EMAIL_CONFIRM}
      GITEA__service__ENABLE_NOTIFY_MAIL: ${ENABLE_NOTIFY_MAIL}
      GITEA__service__ALLOW_ONLY_EXTERNAL_REGISTRATION: ${ALLOW_ONLY_EXTERNAL_REGISTRATION}
      GITEA__service__ENABLE_CAPTCHA: ${ENABLE_CAPTCHA}
      GITEA__service__DEFAULT_KEEP_EMAIL_PRIVATE: ${DEFAULT_KEEP_EMAIL_PRIVATE}
      GITEA__service__DEFAULT_ALLOW_CREATE_ORGANIZATION: ${DEFAULT_ALLOW_CREATE_ORGANIZATION}
      GITEA__service__DEFAULT_ENABLE_TIMETRACKING: ${DEFAULT_ENABLE_TIMETRACKING}
      GITEA__service__NO_REPLY_ADDRESS: ${NO_REPLY_ADDRESS}
      GITEA__cron__UPDATE_CHECKER: ${CRON_UPDATE_CHECKER}
      GITEA__cron__CRON_UPDATE_CHECKER_SCHEDULE: ${CRON_UPDATE_CHECKER_SCHEDULE}
      GITEA__mailer__ENABLED: ${GITEA__MAILER__ENABLED}
      GITEA__mailer__FROM: ${GITEA__MAILER__FROM:?GITEA__mailer__FROM not set}
      GITEA__mailer__PROTOCOL: ${GITEA__MAILER__PROTOCOL}
      GITEA__mailer__SMTP_ADDR: ${GITEA__MAILER__SMTP_ADDR:?GITEA__mailer__SMTP_ADDR not set}
      GITEA__mailer__USER: ${GITEA__MAILER__USER:-apikey}
      GITEA__mailer__PASSWD: ${GITEA__MAILER__PASSWD:?GITEA__mailer__PASSWD not set}"""
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      # Redirecciona HTTP -> HTTPS
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${GITEA_URL}`) || Host(`www.${GITEA_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=${COMPOSE_PROJECT_NAME}-https-redirect"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-https-redirect.redirectscheme.scheme=https"
      # HTTPS (con SSL autom√°tico)
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${GITEA_URL}`) || Host(`www.${GITEA_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"
      # Servicio backend WireGuard
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=3000"

volumes:
  db:
  data:
  config:
  custom:

networks:
  default:
    name: ${NETWORK}
    external: true
