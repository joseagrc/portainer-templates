services:
  db:
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    image: ${MYSQL_IMAGE}:${MYSQL_TAG}
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}

  gitea:
    container_name: ${COMPOSE_PROJECT_NAME}-app
    image: ${GITEA_IMAGE}:${GITEA_TAG}
    restart: always
    depends_on:
      - db
    ports:
      - "${GITEA_SSH_PORT}:22"
    volumes:
      - data:/var/lib/gitea
      - config:/etc/gitea
      - custom:/data/gitea/custom
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      GITEA__database__DB_TYPE: mysql
      GITEA__database__HOST: ${COMPOSE_PROJECT_NAME}-mysql
      GITEA__database__NAME: ${MYSQL_DATABASE}
      GITEA__database__USER: ${MYSQL_USER}
      GITEA__database__PASSWD: ${MYSQL_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      # Redirecciona HTTP -> HTTPS
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${GITEA_URL}`) || Host(`www.${GITEA_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=${COMPOSE_PROJECT_NAME}-https-redirect"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-https-redirect.redirectscheme.scheme=https"
      # HTTPS (con SSL autom√°tico)
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${GITEA_URL}`) || Host(`www.${GITEA_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"
      # Servicio backend WireGuard
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=3000"

volumes:
  db:
  data:
  config:
  custom:

networks:
  default:
    name: ${NETWORK}
    external: true
