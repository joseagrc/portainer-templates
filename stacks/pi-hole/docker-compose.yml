services:
  pihole:
    container_name: ${COMPOSE_PROJECT_NAME}
    image: ${PIHOLE_IMAGE}:${PIHOLE_TAG}
    restart: unless-stopped
    #network_mode: host
    ports:
      # DNS Ports
      - 53:53/tcp
      - 53:53/udp
      # Uncomment the below if using Pi-hole as your DHCP Server
      #- "67:67/udp"
    environment:
      # Set the appropriate timezone for your location
      TZ: ${TZ}
      # Set a password to access the web interface.
      FTLCONF_webserver_api_password: ${FTLCONF_WEBSERVER_API_PASSWORD}
      # If using Docker's default bridge network setting, set the environment variable FTLCONF_dns_listeningMode to all
      FTLCONF_dns_listeningMode: ${FTLCONF_DNS_LISTENINGMODE}
      # Default HTTP Port
      FTLCONF_webserver_port: 80
    cap_add:
      # Required if you are using Pi-hole as your DHCP server, else not needed
      - NET_ADMIN
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      # Redirecciona HTTP -> HTTPS
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${PIHOLE_URL}`) || Host(`www.${PIHOLE_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=${COMPOSE_PROJECT_NAME}-https-redirect"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-https-redirect.redirectscheme.scheme=https"
      # HTTPS (con SSL autom√°tico)
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${PIHOLE_URL}`) || Host(`www.${PIHOLE_URL}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"
      # Servicio backend WireGuard
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"
#    dns:
#      - 127.0.0.1
#      - 1.1.1.1
    volumes:
      - pihole-data:/etc/pihole
      - dnsmasq-data:/etc/dnsmasq.d

volumes:
  pihole-data:
  dnsmasq-data:

networks:
  default:
    name: ${NETWORK}
    external: true
